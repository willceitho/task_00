- name: Add {{ app }} group
  group:
    name: "{{ app }}"

- name: Add {{ app }} user
  user:
    name: "{{ app }}"
    group: "{{ app }}"
    home: /usr/share/{{ app }}
    createhome: no
    system: yes

- name: Download {{ app }}
  get_url:
    url: "{{ app_archive_url }}"
    dest: "{{ app_archive_dest }}"

- name: Create a {{ app }} directory
  file:
    path: /usr/share/{{ app }}
    state: directory
    owner: "{{ app }}"
    group: "{{ app }}"

- name: Extract {{ app }} archive
  unarchive:
    src: "{{ app_archive_dest }}"
    dest: /usr/share/{{ app }}
    owner: "{{ app }}"
    group: "{{ app }}"
    remote_src: yes
    extra_opts: "--strip-components=1"
    # creates: /usr/share/tomcat/bin

# - name: Copy tomcat service file
#   template:
#     src: templates/tomcat.service.j2
#     dest: /etc/systemd/system/tomcat.service
#   when: ansible_service_mgr == "systemd"

# - name: Start and enable tomcat
#   service:
#     daemon_reload: yes
#     name: tomcat
#     state: started
#     enabled: yes
#   when: ansible_service_mgr == "systemd"

# - name: Set UI access credentials
#   template:
#     src: tomcat-users.xml.j2
#     dest: /usr/share/tomcat/conf/tomcat-users.xml
#   notify: restart tomcat

# - name: Allow access to Manager and Host Manager apps from any IP
#   template:
#     src: context.xml.j2 
#     dest: "{{ item }}"
#   with_items:
#     - /usr/share/tomcat/webapps/host-manager/META-INF/context.xml
#     - /usr/share/tomcat/webapps/manager/META-INF/context.xml
#   notify: restart tomcat

# - name: Set port
#   template:
#     src: server.xml.j2
#     dest: /usr/share/tomcat/conf/server.xml
#   notify: restart tomcat
